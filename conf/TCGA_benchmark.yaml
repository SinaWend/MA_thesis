# Example of a comprehensive benchmark config for broader testing scenarios.

# List of all domains that are used as test domains
# In a leave-one-out setup, i.e., for each run,
# one domain from this list is chosen as test domain
# while training is performed on all other domains
# of the specified dataset.
test_domains:
  - Harvard Medical School
  # - Canada's Michael Smith Genome Sciences Centre
  # - Broad Institute of MIT and Harvard
  # - University of North Carolina
  # - Johns Hopkins / University of Southern Californiaâ€‹

output_dir: zoutput/benchmarks/TCGA_vit_dial

# Number of hyperparameter samples per task.
# The total runs of each task are given
# by len(test_domains) * num_param_samples * num_seeds
num_param_samples: 1

san_check: True
san_num: 5

# Seeds for hyperparameter sampling and experiments
# Ensures that the benchmark is reproducible.
startseed: 100
endseed: 100  # Start and end seeds are inclusive

domainlab_args:
  # Common settings passed to each task
  tpath: /lustre/groups/aih/sina.wendrich/MA_code/MA_thesis/tasks/task_tissue_TCGA.py

  bs: 16
  epos: 30
  es: 20
  lr: 1e-5
  
# Model configurations to be tested
# erm_dinov2:
#   # Model-specific settings
#   model: erm
#   npath: examples/nets/dinov2.py


# dial_dinov2_config1:
#   model: erm
#   trainer: dial
#   npath: examples/nets/dinov2.py
#   hyperparameters:
#     dial_steps_perturb:
#       min: 1
#       max: 1
#       step: 1
#       distribution: uniform

#     dial_noise_scale:
#       min: 0.0001
#       max: 0.0001
#       distribution: loguniform

#     dial_epsilon:
#       min: 0.001
#       max: 0.001
#       distribution: loguniform


# dial_dinov2_config2:
#   model: erm
#   trainer: dial
#   npath: examples/nets/dinov2.py
#   hyperparameters:
#     dial_steps_perturb:
#       min: 2
#       max: 2
#       step: 1
#       distribution: uniform

#     dial_noise_scale:
#       min: 0.0001
#       max: 0.0001
#       distribution: loguniform

#     dial_epsilon:
#       min: 0.001
#       max: 0.001
#       distribution: loguniform



# dial_dinov2_config3:
#   model: erm
#   trainer: dial
#   npath: examples/nets/dinov2.py
#   hyperparameters:
#     dial_steps_perturb:
#       min: 3
#       max: 3
#       step: 1
#       distribution: uniform

#     dial_noise_scale:
#       min: 0.0001
#       max: 0.0001
#       distribution: loguniform

#     dial_epsilon:
#       min: 0.001
#       max: 0.001
#       distribution: loguniform

erm_vit:
  # Model-specific settings
  model: erm
  npath: /lustre/groups/aih/sina.wendrich/MA_code/MA_thesis/nets/vit.py

dann_vit:
  model: dann
  npath: /lustre/groups/aih/sina.wendrich/MA_code/MA_thesis/nets/vit.py
  hyperparameters:
    gamma_reg:
      min: 0.0001
      max: 0.0001
      step: 0.1
      distribution: uniform

dial_vit_config1:
  model: erm
  trainer: dial
  npath: /lustre/groups/aih/sina.wendrich/MA_code/MA_thesis/nets/vit.py
  hyperparameters:
    dial_steps_perturb:
      min: 1
      max: 1
      step: 1
      distribution: uniform

    dial_noise_scale:
      min: 0.0001
      max: 0.0001
      distribution: loguniform

    dial_epsilon:
      min: 0.001
      max: 0.001
      distribution: loguniform

# dial_vit_config2:
#   model: erm
#   trainer: dial
#   npath: /lustre/groups/aih/sina.wendrich/MA_code/MA_thesis/nets/vit.py
#   hyperparameters:
#     dial_steps_perturb:
#       min: 2
#       max: 2
#       step: 1
#       distribution: uniform

#     dial_noise_scale:
#       min: 0.0001
#       max: 0.0001
#       distribution: loguniform

#     dial_epsilon:
#       min: 0.001
#       max: 0.001
#       distribution: loguniform

# dial_vit_config3:
#   model: erm
#   trainer: dial
#   npath: /lustre/groups/aih/sina.wendrich/MA_code/MA_thesis/nets/vit.py
#   hyperparameters:
#     dial_steps_perturb:
#       min: 3
#       max: 3
#       step: 1
#       distribution: uniform

#     dial_noise_scale:
#       min: 0.0001
#       max: 0.0001
#       distribution: loguniform

#     dial_epsilon:
#       min: 0.001
#       max: 0.001
#       distribution: loguniform

# erm_resnet:
#   model: erm
#   npath: examples/nets/resnet.py

# dann_resnet:
#   model: dann
#   npath: /lustre/groups/aih/sina.wendrich/MA_code/MA_thesis/nets/resnet.py
#   hyperparameters:
#     gamma_reg:
#       min: 0.0001
#       max: 0.0001
#       step: 0.1
#       distribution: uniform

# dial_resnet_config1:
#   model: erm
#   trainer: dial
#   npath: examples/nets/resnet.py
#   hyperparameters:
#     dial_steps_perturb:
#       min: 1
#       max: 1
#       step: 1
#       distribution: uniform

#     dial_noise_scale:
#       min: 0.0001
#       max: 0.0001
#       distribution: loguniform

#     dial_epsilon:
#       min: 0.001
#       max: 0.001
#       distribution: loguniform

# dial_resnet_config2:
#   model: erm
#   trainer: dial
#   npath: examples/nets/resnet.py
#   hyperparameters:
#     dial_steps_perturb:
#       min: 2
#       max: 2
#       step: 1
#       distribution: uniform

#     dial_noise_scale:
#       min: 0.0001
#       max: 0.0001
#       distribution: loguniform

#     dial_epsilon:
#       min: 0.001
#       max: 0.001
#       distribution: loguniform

# dial_resnet_config3:
#   model: erm
#   trainer: dial
#   npath: examples/nets/resnet.py
#   hyperparameters:
#     dial_steps_perturb:
#       min: 3
#       max: 3
#       step: 1
#       distribution: uniform

#     dial_noise_scale:
#       min: 0.0001
#       max: 0.0001
#       distribution: loguniform

#     dial_epsilon:
#       min: 0.001
#       max: 0.001
#       distribution: loguniform

# diva:
#   model: diva
#   npath: examples/nets/dinov2.py
#   hyperparameters:
#     gamma_y:
#       min: 500000
#       max: 1000000
#       step: 50000
#       distribution: loguniform
#     gamma_d:
#       min: 50000
#       max: 150000
#       step: 5000
#       distribution: loguniform
